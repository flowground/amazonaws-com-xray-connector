{
    "title": "AWS X-Ray",
    "description": "AWS X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.",
    "docsUrl": "https://docs.aws.amazon.com/xray/",
    "url": "https://api.apis.guru/v2/specs/amazonaws.com/xray/2016-04-12/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://xray.amazonaws.com/",
                    "http://xray.amazonaws.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_hmac": {
                "label": "Authorization (hmac)",
                "viewClass": "TextFieldView",
                "note": "Amazon Signature authorization v4"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "CreateGroup": {
            "main": "./lib/actions/CreateGroup.js",
            "title": "CreateGroup",
            "description": "Creates a group resource with a name and a filter expression. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateSamplingRule": {
            "main": "./lib/actions/CreateSamplingRule.js",
            "title": "CreateSamplingRule",
            "description": "Creates a rule to control sampling behavior for instrumented applications. Services retrieve rules with <a>GetSamplingRules</a>, and evaluate each rule in ascending order of <i>priority</i> for each request. If a rule matches, the service records a trace, borrowing it from the reservoir size. After 10 seconds, the service reports back to X-Ray with <a>GetSamplingTargets</a> to get updated versions of each in-use rule. The updated rule contains a trace quota that the service can use instead of borrowing from the reservoir.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateSamplingRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteGroup": {
            "main": "./lib/actions/DeleteGroup.js",
            "title": "DeleteGroup",
            "description": "Deletes a group resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteSamplingRule": {
            "main": "./lib/actions/DeleteSamplingRule.js",
            "title": "DeleteSamplingRule",
            "description": "Deletes a sampling rule.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteSamplingRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetEncryptionConfig": {
            "main": "./lib/actions/GetEncryptionConfig.js",
            "title": "GetEncryptionConfig",
            "description": "Retrieves the current encryption configuration for X-Ray data.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetEncryptionConfig.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetGroup": {
            "main": "./lib/actions/GetGroup.js",
            "title": "GetGroup",
            "description": "Retrieves group resource details.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSamplingRules": {
            "main": "./lib/actions/GetSamplingRules.js",
            "title": "GetSamplingRules",
            "description": "Retrieves all sampling rules.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSamplingRules.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetGroups": {
            "main": "./lib/actions/GetGroups.js",
            "title": "GetGroups",
            "description": "Retrieves all active group details.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetGroups.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutEncryptionConfig": {
            "main": "./lib/actions/PutEncryptionConfig.js",
            "title": "PutEncryptionConfig",
            "description": "Updates the encryption configuration for X-Ray data.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutEncryptionConfig.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSamplingStatisticSummaries": {
            "main": "./lib/actions/GetSamplingStatisticSummaries.js",
            "title": "GetSamplingStatisticSummaries",
            "description": "Retrieves information about recent sampling results for all sampling rules.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSamplingStatisticSummaries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetSamplingTargets": {
            "main": "./lib/actions/GetSamplingTargets.js",
            "title": "GetSamplingTargets",
            "description": "Requests a sampling quota for rules that the service is using to sample requests. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSamplingTargets.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetServiceGraph": {
            "main": "./lib/actions/GetServiceGraph.js",
            "title": "GetServiceGraph",
            "description": "Retrieves a document that describes services that process incoming requests, and downstream services that they call as a result. Root services process incoming requests and make calls to downstream services. Root services are applications that use the AWS X-Ray SDK. Downstream services can be other applications, AWS resources, HTTP web APIs, or SQL databases.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetServiceGraph.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutTelemetryRecords": {
            "main": "./lib/actions/PutTelemetryRecords.js",
            "title": "PutTelemetryRecords",
            "description": "Used by the AWS X-Ray daemon to upload telemetry.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutTelemetryRecords.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTraceGraph": {
            "main": "./lib/actions/GetTraceGraph.js",
            "title": "GetTraceGraph",
            "description": "Retrieves a service graph for one or more specific trace IDs.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTraceGraph.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "PutTraceSegments": {
            "main": "./lib/actions/PutTraceSegments.js",
            "title": "PutTraceSegments",
            "description": "Uploads segment documents to AWS X-Ray. The X-Ray SDK generates segment\ndocuments and sends them to the X-Ray daemon, which uploads them in batches. A\nsegment document can be a completed segment, an in-progress segment, or an array\nof subsegments.\n\nSegments must include the following fields. For the full segment document\nschema, see AWS X-Ray Segment Documents\n[https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html] \nin the AWS X-Ray Developer Guide.\n\n Required Segment Document Fields \n\n *   name - The name of the service that handled the request.\n   \n   \n *   id - A 64-bit identifier for the segment, unique among segments in the same\n   trace, in 16 hexadecimal digits.\n   \n   \n *   trace_id - A unique identifier that connects all segments and subsegments\n   originating from a single client request.\n   \n   \n *   start_time - Time the segment or subsegment was created, in floating point\n   seconds in epoch time, accurate to milliseconds. For example, 1480615200.010 \n   or 1.480615200010E9.\n   \n   \n *   end_time - Time the segment or subsegment was closed. For example, \n   1480615200.090 or 1.480615200090E9. Specify either an end_time or in_progress\n   .\n   \n   \n *   in_progress - Set to true instead of specifying an end_time to record that a\n   segment has been started, but is not complete. Send an in progress segment\n   when your application receives a request that will take a long time to serve,\n   to trace the fact that the request was received. When the response is sent,\n   send the complete segment to overwrite the in-progress segment.\n   \n   \n\nA trace_id consists of three numbers separated by hyphens. For example,\n1-58406520-a006649127e371903a2de979. This includes:\n\n Trace ID Format \n\n *  The version number, i.e. 1.\n   \n   \n *  The time of the original request, in Unix epoch time, in 8 hexadecimal\n   digits. For example, 10:00AM December 2nd, 2016 PST in epoch time is \n   1480615200 seconds, or 58406520 in hexadecimal.\n   \n   \n *  A 96-bit identifier for the trace, globally unique, in 24 hexadecimal\n   digits.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PutTraceSegments.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetTraceSummaries": {
            "main": "./lib/actions/GetTraceSummaries.js",
            "title": "GetTraceSummaries",
            "description": "Retrieves IDs and metadata for traces available for a specified time frame using\nan optional filter. To get the full traces, pass the trace IDs to BatchGetTraces\n.\n\nA filter expression can target traced requests that hit specific service nodes\nor edges, have errors, or come from a known user. For example, the following\nfilter expression targets traces that pass through api.example.com:\n\n service(\"api.example.com\") \n\nThis filter expression finds traces that have an annotation named account with\nthe value 12345:\n\n annotation.account = \"12345\" \n\nFor a full list of indexed fields and keywords that you can use in filter\nexpressions, see Using Filter Expressions\n[http://docs.aws.amazon.com/xray/latest/devguide/xray-console-filters.html] in\nthe AWS X-Ray Developer Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTraceSummaries.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BatchGetTraces": {
            "main": "./lib/actions/BatchGetTraces.js",
            "title": "BatchGetTraces",
            "description": "Retrieves a list of traces specified by ID. Each trace is a collection of segment documents that originates from a single request. Use <code>GetTraceSummaries</code> to get a list of trace IDs.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchGetTraces.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateGroup": {
            "main": "./lib/actions/UpdateGroup.js",
            "title": "UpdateGroup",
            "description": "Updates a group resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateSamplingRule": {
            "main": "./lib/actions/UpdateSamplingRule.js",
            "title": "UpdateSamplingRule",
            "description": "Modifies a sampling rule's configuration.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateSamplingRule.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}